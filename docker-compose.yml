version: '3'

networks:
  medok_network:

volumes:
  logs_volume:
  prometheus_volume:
  alertmanager_volume:
  promtail_volume:

services:
  #Main app
  medok:
    build:
      context: .
    image: medok:latest
    container_name: medok
    volumes:
      - logs_volume:/logs/
    expose:
      - 8080
    networks:
      - medok_network
    depends_on:
      - medok_database
    environment:
      - JDBC_DATABASE_URL=jdbc:postgresql://medok_database:5432/medok
      - JDBC_DATABASE_USERNAME=medok
      - JDBC_DATABASE_PASSWORD=medok

  #DB for main app
  medok_database:
    image: postgres
    container_name: medok_database
    expose:
      - 5432
    networks:
      - medok_network
    environment:
      - POSTGRES_USER=medok
      - POSTGRES_PASSWORD=medok

  #Nginx
  nginx:
    container_name: medok_nginx
    image: nginx:1.13
    restart: always
    ports:
      - 80:80
    networks:
      - medok_network
    volumes:
      - ./configs/nginx/nginx.conf:/etc/nginx/nginx.conf

  #Local grafana client
  grafana:
    image: grafana/grafana
    container_name: medok_grafana
    hostname: grafana
    restart: always
    ports:
      - "3000:3000"
    networks:
      - medok_network

  #DB for metrics
  prometheus:
    image: prom/prometheus
    container_name: medok_prometheus
    hostname: prometheus
    restart: always
    volumes:
      - ./configs/prometheus/prometheus.yaml:/etc/prometheus/prometheus.yml
      - ./configs/alertmanager/rules:/etc/prometheus/alertmanager/rules/
    ports:
      - "9090:9090"
    networks:
      - medok_network
    depends_on:
      - cadvisor
      - node_exporter

  #Log collection to grafana cloud
  promtail:
    image: grafana/promtail:1.4.1
    container_name: medok_promtail
    volumes:
      - logs_volume:/var/log/
      - ./configs/promtail/promtail-config.yaml:/etc/promtail/promtail.yml
    command:
      - '-config.file=/etc/promtail/promtail.yml'

  #Local log collection
  loki:
    image: grafana/loki:2.5.0
    container_name: medok_loki
    ports:
      - "3100:3100"
    volumes:
      - ./configs/loki/config.yaml:/etc/loki/config.yaml
    command: -config.file=/etc/loki/config.yaml
    networks:
      - medok_network

  #Get mterics from host machine
  node_exporter:
    image: quay.io/prometheus/node-exporter
    container_name: medok_node_exporter
    hostname: node-exporter
    restart: always
    networks:
      - medok_network
    ports:
      - "9100:9100"

  #Get metrics from docker containers
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: medok_cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
      - /cgroup:/cgroup:ro
    devices:
      - /dev/kmsg
    restart: unless-stopped
    privileged: true
    networks:
      - medok_network
    command:
      - '-port=8081'
    ports:
      - "8081:8081"

  #Alert manager
  alertmanager:
    image: prom/alertmanager
    container_name: medok_alertmanager
    ports:
      - 9093:9093
    volumes:
      - ./configs/alertmanager/config.yml:/etc/alertmanager/config.yml
    networks:
      - medok_network
    restart: always
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'

  #Bot for notify alerts in telegram
  alert_bot:
    image: lorien/incaller-prometheus-telegram-bot
    container_name: medok_alert_bot
    volumes:
      - ./configs/telegrambot/:/etc/telegrambot/
      - ./configs/telegrambot/config.yaml:/config.yaml  
    restart: always
    depends_on:
      - alertmanager
    ports:
      - 9087:9087
    networks:
      - medok_network